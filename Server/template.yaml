AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.12
    Timeout: 15
    Environment:
      Variables:
        RDS_ENDPOINT: host.docker.internal
        RDS_PORT: 5433
        RDS_USER: postgres
        RDS_DBNAME: trackme
        RDS_PASSWORD: password
        DYNAMODB_ENDPOINT: http://host.docker.internal:8001
        DYNAMODB_REGION: us-west-1
        AWS_ACCESS_KEY_ID: fakeAccessKeyId
        AWS_SECRET_ACCESS_KEY: fakeSecretAccessKey


Resources:
  # API Gateway
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Cors:
        AllowMethods: "'POST, GET, OPTIONS'"
        AllowHeaders: "'Content-Type, Authorization'"
        AllowOrigin: "'http://localhost:8081'"
        AllowCredentials: true
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Sub "arn here"
            Identity:
              Header: Authorization

  RDSLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: RDSLayer
      Description: RDSLayer utilities
      ContentUri: layers/rds/python/
      CompatibleRuntimes:
        - python3.12
    Metadata:
      BuildMethod: python3.12

  UserAuthLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: UserAuthLayer
      Description: UserAuthLayer utilities
      ContentUri: layers/user_auth/python/
      CompatibleRuntimes:
        - python3.12
    Metadata:
      BuildMethod: python3.12
  #
  #
  #
  # ATHLETE FUNCTIONS
  #
  #
  #
  RemoveInputsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/athlete/remove_inputs/
      Handler: remove_inputs.remove_inputs
      Events:
        RemoveInputsApi:
          Type: Api
          Properties: 
            Path: /athletes/remove_inputs/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  SearchInputHistoryDateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/athlete/search_input_history_date/
      Handler: search_input_history_date.search_input_history_date
      Events:
        SearchInputHistoryDateApi:
          Type: Api
          Properties:
            Path: /athletes/search_input_history_date/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  InputTimesFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/input_times/
      Handler: input_times.input_times
      Events:
        InputTimeApi:
          Type: Api
          Properties:
            Path: /athletes/input_times/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  ViewWorkoutInputsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/view_workout_inputs/
      Handler: view_workout_inputs.view_workout_inputs
      Events:
        ViewWorkoutInputsApi:
          Type: Api
          Properties:
            Path: /athletes/view_workout_inputs/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  #
  # 
  #
  # COACH FUNCTIONS
  #
  #
  #

  DeleteGroupWorkoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/delete_group_workout/
      Handler: delete_group_workout.delete_group_workout
      Events:
        DeleteGroupWorkoutApi:
          Type: Api
          Properties:
            Path: /coaches/delete_group_workout/
            Method: delete
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  DeleteGroupFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/delete_group/
      Handler: delete_group.delete_group
      Events:
        DeleteGroupApi:
          Type: Api
          Properties:
            Path: /coaches/delete_group/
            Method: delete
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  FetchHistoricalDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/fetch_historical_data/
      Handler: fetch_historical_data.fetch_historical_data
      Events:
        FetchHistoricalDataApi:
          Type: Api
          Properties:
            Path: /coaches/fetch_historical_data/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  GetAvailableHistoryDatesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/get_available_history_dates/
      Handler: get_available_history_dates.get_available_history_dates
      Events:
        GetAvailableHistoryDatesApi:
          Type: Api
          Properties:
            Path: /coaches/get_available_history_dates/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  RemoveGroupAthleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/remove_group_athlete/
      Handler: remove_group_athlete.remove_group_athlete
      Events:
        RemoveGroupAthleteApi:
          Type: Api
          Properties:
            Path: /coaches/remove_group_athlete/
            Method: delete
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  DeleteWorkoutTemplateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/delete_workout_template/
      Handler: delete_workout_template.delete_workout_template
      Events:
        DeleteWorkoutTemplateApi:
          Type: Api
          Properties:
            Path: /coaches/delete_workout_template/
            Method: delete
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  GetWorkoutTemplatesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/get_workout_templates/
      Handler: get_workout_templates.get_workout_templates
      Events:
        GetWorkoutTemplatesApi:
          Type: Api
          Properties:
            Path: /coaches/get_workout_templates/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  GetAbsentGroupAthletesFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/get_absent_group_athletes/
      Handler: get_absent_group_athletes.get_absent_group_athletes
      Events:
        GetAbsentGroupAthletesApi:
          Type: Api
          Properties:
            Path: /coaches/get_absent_group_athletes/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  AddAthleteToGroupFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/add_athlete_to_group/
      Handler: add_athlete_to_group.add_athlete_to_group
      Events:
        AddAthleteToGroupApi:
          Type: Api
          Properties:
            Path: /coaches/add_athlete_to_group/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  CreateGroupFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/create_group/
      Handler: create_group.create_group
      Events:
        CreateGroupApi:
          Type: Api
          Properties:
            Path: /coaches/create_group/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  CreateWorkoutTemplateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/create_workout_template/
      Handler: create_workout_template.create_workout_template
      Events:
        CreateWorkoutTemplateApi:
          Type: Api
          Properties:
            Path: /coaches/create_workout_template/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  AssignGroupWorkoutTemplateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/assign_group_workout_template/
      Handler: assign_group_workout_template.assign_group_workout_template
      Events:
        AssignGroupWorkoutTemplateApi:
          Type: Api
          Properties:
            Path: /coaches/assign_group_workout_template/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  AssignGroupWorkout:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/assign_group_workout/
      Handler: assign_group_workout.assign_group_workout
      Events:
        AssignGroupWorkoutApi:
          Type: Api
          Properties:
            Path: /coaches/assign_group_workout/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer
  #
  #
  #
  # GENERAL FUNCTIONS
  #
  #
  #
  UpdateUserProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/update_user_profile/
      Handler: update_user_profile.update_user_profile
      Events:
        UpdateUserProfileApi:
          Type: Api
          Properties:
            Path: /general/update_user_profile/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/create_user/
      Handler: create_user.create_user
      Events:
        CreateUserApi:
          Type: Api
          Properties:
            Path: /general/create_user/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  GetWeeklyScheduleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/get_weekly_schedule/
      Handler: get_weekly_schedule.get_weekly_schedule
      Events:
        GetWeeklyScheduleApi:
          Type: Api
          Properties:
            Path: /general/get_weekly_schedule/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  MassInput:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/mass_input/
      Handler: mass_input.mass_input
      Events:
        MassInputApi:
          Type: Api
          Properties:
            Path: /general/mass_input/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  GetPendingProposals:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/get_pending_proposals/
      Handler: get_pending_proposals.get_pending_proposals
      Events:
        GetPendingProposalsApi:
          Type: Api
          Properties:
            Path: /general/get_pending_proposals/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/get_user/
      Handler: get_user.get_user
      Events:
        GetUserApi:
          Type: Api
          Properties:
            Path: /general/get_user/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  ViewGroupInputsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/view_group_inputs/
      Handler: view_group_inputs.view_group_inputs
      Events:
        ViewGroupInputsApi:
          Type: Api
          Properties:
            Path: /general/view_group_inputs/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  GetAthletesForGroupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/get_athletes_for_group/
      Handler: get_athletes_for_group.get_athletes_for_group
      Events:
        GetAthletesForGroupApi:
          Type: Api
          Properties:
            Path: /general/get_athletes_for_group/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

  GetGroupsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/general/get_groups/
      Handler: get_groups.get_groups
      Events:
        GetGroupsApi:
          Type: Api
          Properties:
            Path: /general/get_groups/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer
        
  GetGroupWorkout:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/get_group_workout/
      Handler: get_group_workout.get_group_workout
      Events:
        GetGroupWorkoutApi:
          Type: Api
          Properties:
            Path: /general/get_group_workout/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer

    AddRelationFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: lambdas/general/add_relation/
        Handler: add_relation.add_relation
        Events:
          AddRelationApi:
            Type: Api
            Properties:
              Path: /general/add_relation/
              Method: post
              RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer
        - Ref: UserAuthLayer