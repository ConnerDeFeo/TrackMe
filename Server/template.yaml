AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.12
    Timeout: 15
    Environment:
      Variables:
        RDS_ENDPOINT: host.docker.internal
        RDS_PORT: 5433
        RDS_USER: postgres
        RDS_DBNAME: trackme
        RDS_PASSWORD: password
        DYNAMODB_ENDPOINT: http://host.docker.internal:8001
        DYNAMODB_REGION: us-west-1
        AWS_ACCESS_KEY_ID: fakeAccessKeyId
        AWS_SECRET_ACCESS_KEY: fakeSecretAccessKey


Resources:
  # API Gateway
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Cors:
        AllowMethods: "'POST, GET, OPTIONS'"
        AllowHeaders: "'Content-Type, Authorization'"
        AllowOrigin: "'http://localhost:8081'"
        AllowCredentials: true

  RDSLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: RDSLayer
      Description: RDSLayer utilities
      ContentUri: layers/rds/python/
      CompatibleRuntimes:
        - python3.12
    Metadata:
      BuildMethod: python3.12

  # ATHLETE FUNCTIONS
  SearchCoachesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/athlete/search_coaches/
      Handler: search_coaches.search_coaches
      Events:
        SearchCoachesApi:
          Type: Api
          Properties:
            Path: /athletes/search_coaches/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  RequestCoachFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/athlete/request_coach/
      Handler: request_coach.request_coach
      Events:
        RequestCoachApi:
          Type: Api
          Properties:
            Path: /athletes/request_coach/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  UpdateAthleteProfileFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/update_athlete_profile/
      Handler: update_athlete_profile.update_athlete_profile
      Events:
        UpdateAthleteProfileApi:
          Type: Api
          Properties:
            Path: /athletes/update_athlete_profile/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  ViewWorkoutsAthleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/view_workouts_athlete/
      Handler: view_workouts_athlete.view_workouts_athlete
      Events:
        ViewWorkoutsAthleteApi:
          Type: Api
          Properties:
            Path: /athletes/view_workouts_athlete/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetCoachesFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/get_coaches/
      Handler: get_coaches.get_coaches
      Events:
        GetCoachesApi:
          Type: Api
          Properties:
            Path: /athletes/get_coaches/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetCoachRequestsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/athlete/get_coach_requests/
      Handler: get_coach_requests.get_coach_requests
      Events:
        GetCoachRequestsApi:
          Type: Api
          Properties:
            Path: /athletes/get_coach_requests/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  CreateAthleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/create_athlete/
      Handler: create_athlete.create_athlete
      Events:
        CreateAthleteApi:
          Type: Api
          Properties:
            Path: /athletes/create_athlete/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  AcceptCoachInviteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/accept_coach_invite/
      Handler: accept_coach_invite.accept_coach_invite
      Events:
        AcceptGroupInviteApi:
          Type: Api
          Properties:
            Path: /athletes/accept_coach_invite/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  InputTimesFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/input_times/
      Handler: input_times.input_times
      Events:
        InputTimeApi:
          Type: Api
          Properties:
            Path: /athletes/input_times/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  ViewWorkoutInputsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/athlete/view_workout_inputs/
      Handler: view_workout_inputs.view_workout_inputs
      Events:
        ViewWorkoutInputsApi:
          Type: Api
          Properties:
            Path: /athletes/view_workout_inputs/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  # COACH FUNCTIONS
  ViewAthleteRequestsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/view_athlete_requests/
      Handler: view_athlete_requests.view_athlete_requests
      Events:
        ViewAthleteRequestsApi:
          Type: Api
          Properties:
            Path: /coaches/view_athlete_requests/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  AcceptAthleteRequestFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/accept_athlete_request/
      Handler: accept_athlete_request.accept_athlete_request
      Events:
        AcceptAthleteRequestApi:
          Type: Api
          Properties:
            Path: /coaches/accept_athlete_request/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  UpdateCoachProfileFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/update_coach_profile/
      Handler: update_coach_profile.update_coach_profile
      Events:
        UpdateCoachApi:
          Type: Api
          Properties:
            Path: /coaches/update_coach_profile/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  RemoveGroupAthleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/remove_group_athlete/
      Handler: remove_group_athlete.remove_group_athlete
      Events:
        RemoveGroupAthleteApi:
          Type: Api
          Properties:
            Path: /coaches/remove_group_athlete/
            Method: delete
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  DeleteWorkoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/delete_workout/
      Handler: delete_workout.delete_workout
      Events:
        DeleteWorkoutApi:
          Type: Api
          Properties:
            Path: /coaches/delete_workout/
            Method: delete
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetGroupWorkout:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/get_group_workout/
      Handler: get_group_workout.get_group_workout
      Events:
        GetGroupWorkoutApi:
          Type: Api
          Properties:
            Path: /coaches/get_group_workout/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetWorkoutsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/get_workouts/
      Handler: get_workouts.get_workouts
      Events:
        GetWorkoutsApi:
          Type: Api
          Properties:
            Path: /coaches/get_workouts/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetAbsentGroupAthletesFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/get_absent_group_athletes/
      Handler: get_absent_group_athletes.get_absent_group_athletes
      Events:
        GetAbsentGroupAthletesApi:
          Type: Api
          Properties:
            Path: /coaches/get_absent_group_athletes/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  AddAthleteToGroupFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/add_athlete_to_group/
      Handler: add_athlete_to_group.add_athlete_to_group
      Events:
        AddAthleteToGroupApi:
          Type: Api
          Properties:
            Path: /coaches/add_athlete_to_group/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetAthletesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/get_athletes/
      Handler: get_athletes.get_athletes
      Events:
        GetAthletesApi:
          Type: Api
          Properties:
            Path: /coaches/get_athletes/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  CreateCoachFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/create_coach/
      Handler: create_coach.create_coach
      Events:
        CreateCoachApi:
          Type: Api
          Properties:
            Path: /coaches/create_coach/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  CreateGroupFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/create_group/
      Handler: create_group.create_group
      Events:
        CreateGroupApi:
          Type: Api
          Properties:
            Path: /coaches/create_group/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  CreateWorkoutFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/create_workout/
      Handler: create_workout.create_workout
      Events:
        CreateWorkoutApi:
          Type: Api
          Properties:
            Path: /coaches/create_workout/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  AssignGroupWorkoutFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/assign_group_workout/
      Handler: assign_group_workout.assign_group_workout
      Events:
        AssignGroupWorkoutApi:
          Type: Api
          Properties:
            Path: /coaches/assign_group_workout/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  InviteAthleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/coach/invite_athlete/
      Handler: invite_athlete.invite_athlete
      Events:
        InviteAthleteApi:
          Type: Api
          Properties:
            Path: /coaches/invite_athlete/
            Method: post
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  SearchAthletesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/coach/search_athletes/
      Handler: search_athletes.search_athletes
      Events:
        SearchAthletesApi:
          Type: Api
          Properties:
            Path: /coaches/search_athletes/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  # GENERAL FUNCTIONS
  RemoveCoachAthlete:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/remove_coach_athlete/
      Handler: remove_coach_athlete.remove_coach_athlete
      Events:
        RemoveCoachAthleteApi:
          Type: Api
          Properties:
            Path: /general/remove_coach_athlete/
            Method: delete
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/get_user/
      Handler: get_user.get_user
      Events:
        GetUserApi:
          Type: Api
          Properties:
            Path: /general/get_user/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  ViewGroupInputsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/view_group_inputs/
      Handler: view_group_inputs.view_group_inputs
      Events:
        ViewGroupInputsApi:
          Type: Api
          Properties:
            Path: /general/view_group_inputs/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetAthletesForGroupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/general/get_athletes_for_group/
      Handler: get_athletes_for_group.get_athletes_for_group
      Events:
        GetAthletesForGroupApi:
          Type: Api
          Properties:
            Path: /general/get_athletes_for_group/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

  GetGroupsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/general/get_groups/
      Handler: get_groups.get_groups
      Events:
        GetGroupsApi:
          Type: Api
          Properties:
            Path: /general/get_groups/
            Method: get
            RestApiId: !Ref ApiGatewayApi
      Layers:
        - Ref: RDSLayer

Outputs:
  ApiGatewayApiUrl:
    Description: "API Gateway endpoint URL for Dev stage"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/"
    
  LocalApiUrl:
    Description: "Local API Gateway endpoint URL"
    Value: "http://127.0.0.1:3000"
